{
    "identity": "nprot-5233",
    "title": "Using moFF  to Extract Peptide Ion Intensities from LC-MS experiments",
    "content": [
        {
            "header": "Introduction",
            "content": "Quantitative mass spectrometry \\(MS) based proteomics aims to quantify all proteins in a sample<sup>1</sup>.  Quantitative approaches fall in two main groups: labelled and label free. In labelled approaches the quantification is based on the labelling of the peptides using an isotopic or isobaric mass tag.  Label-free approaches, does not require these additional costs for sample preparation and can be performed on unlimited number of samples. The most accurate label-free quantification methods are based on MS1 signals, extracting peptide intensities by finding the best peak in the three relevant dimensions \\(m/z, retention time, intensity). The associated workflow consist in the feature detection and the feature alignment<sup>2</sup>. \r\n\n\nA feature is a triplet composed by the mass-over-charge \\(m/z), RT and intensity founded in the raw data. In the feature combination step, features that belongs to the same peptides are grouped in cluster where the m/z values correspond to the isotopic masses of a peptides and the RT time interval correspond to the elution profile of the peptides. The intensity of possible peptide \\(a cluster of features) is the sum of all the peaks in the retention time interval identified. The feature alignment \\(called \u201cmatch-between-runs\u201d) is intended to match features across runs that lack identified fragment spectra in some of the runs.\r\n\n\nMaxQuant<sup>3</sup> is the most popular software for protein quantification, it detects features by fitting a Gaussian peak shape to the three relevant dimensions \\(intensity, RT, and m/z) and then estimates peptide intensity as the volume of this complex 3D feature. Despite the precise intensities computed, MaxQuant suffers of speed penalties when the size of the dataset is increased and of a lack of integration in own pipeline.\r\n\n\nThe increasing size also the complexity of the proteomics data in public repository \\(ProteomeXchange<sup>4</sup>) and their re-analysis has been shown to be promising for novel discovery<sup>5</sup>. To face this new challenge there is a need of quantification tool fast reliable and cluster friendly that can scale with the increasing size of complex quantitative data sets present in public proteomics repositories.  \r\n\n\n\r\n\n\n**moFF Overview**\r\n\n\n\r\n\n\nmoFF \\(modest Feature Finder) is a simple, fast and operating system independent MS1-based relative quantification algorithm. moFF is based on python  and works directly on Thermo raw file and mzML as well. \r\n\n\nThe access to Thermo raw file is based on the unthermo raw file library <sup>6</sup> that allow moFF to work both on Linux and Windows system. The access to mzML files is based on the  python library pymzML<sup>7</sup>.\r\n\n\nmoFF consists in two modules : the match-between-run and the apex extraction module. The complete workflow is showed in Figure 1 <a href=\"#figures\" data-url=\"http://www.nature.com/protocolexchange/system/uploads/4837/original/fig_1.png?1474983739\">See figure in Figures section.</a> \r\n\n\n\r\n\n\nAs input, moFF needs a list of identified features \\(e.g the result of Mascot or X\\!Tandem) where each feature should be characterized by a minimum set of information. \r\n\n\nThe match-between-runs module \\(mbr) performs a RT alignment across the runs, in order to match undefined features that are identified in other run. This process increase the number of quantified feature across the replicates and reduces the missing values in the MS1 intensity matrix used in further analysis.\r\n\n\nBoth matched and identified feature are then processed by the apex module  where the apex peaks are extracted directly from their XiC retrieved from the raw files \\(see Figure 2). <a href=\"#figures\" data-url=\"http://www.nature.com/protocolexchange/system/uploads/4839/original/moff_peak_approach.png?1474984113\">See figure in Figures section.</a> \r\n\n\n\r\n\n\nmoFF provides two quality measures of the peak extracted:\r\n\n\n- Shape of the peak \\(**log_L_R**): if the peak has a symmetrical shape  the value will be around 0, otherwise for left  or right skewed shape the value is respectively greater or less than 0 \r\n\n\n-Signal-to-noise \\(**SNR**): this measure how the apex intensity is higher with respect to the level of the noise presence in the XiC extracted. \r\n\n\n\r\n\n\nThe parameters of moFF are the following:\r\n\n\n- The size of XiC windows retrieved for each feature.\r\n\n\n- The retention time \\(RT) window used to search the apex.\r\n\n\n- The precursor mass tolerance\r\n\n\n\r\n\n\nThe match-between-run has also other parameters:\r\n\n\n- The retention time \\(RT) windows used to search the apex intensity for the matched peak \r\n\n\n-  Outlier filter and its width value. This filter works on the training set used to train the RT predicted models\r\n\n\n-  Weighted or an unweighted combination of the predicted retention time model when a features is matched in several runs."
        },
        {
            "header": "Equipment",
            "content": "**Computer**\r\n\n\n\r\n\n\n- Operating system:  Windows or Linux \r\n\n\n- Python 2.7 installed and also Java 1.7 for moFF-GUI\r\n\n\n-  Download \"moFF-GUI\":https://github.com/compomics/moff-gui  or \"moFF\":https://github.com/compomics/moFF\r\n\n\n\r\n\n\n**Input data**\r\n\n\n- Raw file: Themo raw file of mzML file\r\n\n\n-  Identified features listed in a tab delimited file. The minimum information required for each feature are:\r\n\n\n_peptide_: sequence of the peptide\r\n\n\n _prot_: protein ID \r\n\n\n_rt_: feature retention time \\(The retention time must be specified in second )\r\n\n\n_mz_: mass over charge\r\n\n\n_mass_: mass of the feature\r\n\n\n_charge_: charge of the ionized feature\r\n\n\n- PeptideShaker cps files along with the sequence database \\(FASTA) and spectra \\(MGF) used in SearchGui \\(only for moFF-GUI )"
        },
        {
            "header": "Procedure",
            "content": "**moFF from the command line with identified features in tab-delimited file as input**\r\n\n\n\r\n\n\n1. Put your input identified features files in _input_. Put your raw file in another folder a called _rawFolder_. \r\n  \r\n\n\n\r\n\n\n2. Run moFF \\(match-between-runs and apex) using the following command:\r\n   **python moff_all.py --inputF input/ --raw_repo rawFolder/ --output_folder my_output **\r\n\n\n\r\n\n\nTo set all the parameters and options of moFF, please read the full list in the \"documentation\":https://github.com/compomics/moFF/blob/master/README.md#entire-workflow\r\n\n\n\r\n\n\n3. Collect all the results in the output folder \r\n  \r\n\n\n\r\n\n\n**moFF-GUI with PeptideShaker result as input**\r\n\n\n\r\n\n\n1. Run moFF-GUI and set the folder where PeptideShaker is installed and the output folder where all the results are collected. Click _proceed_ to continue\r\n  \r\n\n\n2. Choose which module to run. 'Apex' is just the apex MS1 extraction, and 'matching-between-run' for the match-between-runs module plus the apex module. Click _proceed_ to continue \\(Figure 3).\nSee figure in Figures section.\n3. Insert the Thermo RawFile or mzML files. For each raw file you have to associate also the relative cpsx file. Moreover, you can also insert the fasta and the mgf files used in PeptideShaker/SearchGui. Click _proceed_ to continue \\(Figure 4).\nSee figure in Figures section.\n4. Setting of the moFF parameters \\(Figure 5): \r\n  - XiC retention window \r\n\n\n- Peak retention time windows \r\n\n\n- Precursor mass tolerance\r\n\n\n- Match-between-run parameters_:\r\n\n\n  -Peak retention time windows for matched peak\r\n\n\n- Weighting/unweighting and the activation of outlier filtering and its width value\r\n\n\n- Selection of a set of specific peptides \\(loaded as tab-delimited file) and use them as training set of the mbr procedure instead of the shared features of the runs.\nSee figure in Figures section.\n5 Start the procedure clicking on _start_. Collect your result in the output folder"
        },
        {
            "header": "Timing",
            "content": "The time taken largely depend by the number of input feature and by  the length of  the XiC extracted  \\(XiC retention window)."
        },
        {
            "header": "Anticipated Results",
            "content": "moFF  produces for each run/raw file a file with the results and a log file with detailed information about the apex intensity extraction \\(see Figure 6). \r\n\n\n<a href=\"#figures\" data-url=\"http://www.nature.com/protocolexchange/system/uploads/4853/original/moFF_output.png?1475502171\">See figure in Figures section.</a> \r\n\n\n\r\n\n\n\r\n\n\nThe output of  match-between-run module  is the set of  the input files enriched with the matched features founded  and a separated  log file that contains all the detail of procedure."
        },
        {
            "header": "References",
            "content": "1.Vaudel, M., Sickmann, A. & Martens, L. Peptide and protein quantification: a map of the minefield. Proteomics 10, 650\u201370 \\(2010)\r\n\n\n\r\n\n\n2.Sandin, M., Teleman, J., Malmstr\u00f6m, J. & Levander, F. Data processing methods and quality control strategies for label-free LC-MS protein quantification. Biochim. Biophys. Acta 1844, 29\u201341 \\(2014).\r\n\n\n\r\n\n\n3.Cox, J. & Mann, M. MaxQuant enables high peptide identification rates, individualized p.p.b.-range mass accuracies and proteome-wide protein quantification. Nat Biotech 26, 1367\u20131372 \\(2008)\r\n\n\n\r\n\n\n4.Vizca\u00edno, J. A. et al. ProteomeXchange provides globally coordinated proteomics data submission and dissemination. Nat. Biotechnol. 32, 223\u20136 \\(2014)\r\n\n\n\r\n\n\n5. Vaudel, M. et al. Exploring the potential of public proteomics data. Proteomics 16, 214\u201325 \\(2016)\r\n  \r\n\n\n6.Kelchtermans, P. et al. An open source, platform-independent library and online scripting environment for accessing Thermo Scientific RAW files. J. Proteome Res. \\(2015). doi:10.1021/acs.jproteome.5b00778\r\n\n\n\r\n\n\n7. Bald, T. et al. pymzML--Python module for high-throughput bioinformatics on mass spectrometry data. Bioinformatics 28, 1052\u20133 \\(2012)."
        }
    ],
    "attributes": {
        "acceptedTermsAndConditions": true,
        "allowDirectSubmit": true,
        "archivedVersions": [],
        "articleType": "Method Article",
        "associatedPublications": [
            {
                "doi": "10.1038/nmeth.4075",
                "date": "2016-11-29 16:24:06",
                "title": "",
                "authors": "",
                "journal": "",
                "logo": ""
            }
        ],
        "authors": [
            {
                "id": 14169,
                "identity": "a0d1ac26-516f-11e9-9e20-12b504df345a",
                "order_by": 0,
                "name": "Lennart  Martens",
                "email": "lennart..martens@ugent.be",
                "orcid": "",
                "institution": "Department of Medical Protein Research VIB ,Department of Biochemistry, Ghent University",
                "correspondingAuthor": true,
                "prefix": "",
                "firstName": "Lennart",
                "middleName": "",
                "lastName": "Martens",
                "suffix": ""
            },
            {
                "id": 14163,
                "identity": "a0d19a9a-516f-11e9-9e20-12b504df345a",
                "order_by": 1,
                "name": "Andrea Argentini",
                "email": "",
                "orcid": "",
                "institution": "Department of Medical Protein Research VIB ,Department of Biochemistry, Ghent University",
                "correspondingAuthor": false,
                "prefix": "",
                "firstName": "Andrea",
                "middleName": "",
                "lastName": "Argentini",
                "suffix": ""
            },
            {
                "id": 14164,
                "identity": "a0d19f51-516f-11e9-9e20-12b504df345a",
                "order_by": 1,
                "name": "Ludger J. E.  Goeminne",
                "email": "",
                "orcid": "",
                "institution": "Department of Medical Protein Research VIB ,Department of Biochemistry, Ghent University,Department of Applied Mathematics, Computer Science and Statistics, Ghent University, ",
                "correspondingAuthor": false,
                "prefix": "",
                "firstName": "Ludger",
                "middleName": "J. E.",
                "lastName": "Goeminne",
                "suffix": ""
            },
            {
                "id": 14165,
                "identity": "a0d1a234-516f-11e9-9e20-12b504df345a",
                "order_by": 1,
                "name": "Kenneth Verheggen",
                "email": "",
                "orcid": "",
                "institution": "Department of Medical Protein Research VIB ,Department of Biochemistry, Ghent University",
                "correspondingAuthor": false,
                "prefix": "",
                "firstName": "Kenneth",
                "middleName": "",
                "lastName": "Verheggen",
                "suffix": ""
            },
            {
                "id": 14166,
                "identity": "a0d1a4ba-516f-11e9-9e20-12b504df345a",
                "order_by": 1,
                "name": "Niels  Hulstaert",
                "email": "",
                "orcid": "",
                "institution": "Department of Medical Protein Research VIB ,Department of Biochemistry, Ghent University",
                "correspondingAuthor": false,
                "prefix": "",
                "firstName": "Niels",
                "middleName": "",
                "lastName": "Hulstaert",
                "suffix": ""
            },
            {
                "id": 14167,
                "identity": "a0d1a745-516f-11e9-9e20-12b504df345a",
                "order_by": 1,
                "name": "An  Staes",
                "email": "",
                "orcid": "",
                "institution": "Department of Medical Protein Research VIB ,Department of Biochemistry, Ghent University",
                "correspondingAuthor": false,
                "prefix": "",
                "firstName": "An",
                "middleName": "",
                "lastName": "Staes",
                "suffix": ""
            },
            {
                "id": 14168,
                "identity": "a0d1a9ab-516f-11e9-9e20-12b504df345a",
                "order_by": 1,
                "name": "Lieven  Clement",
                "email": "",
                "orcid": "",
                "institution": "Department of Applied Mathematics, Computer Science and Statistics, Ghent University, ",
                "correspondingAuthor": false,
                "prefix": "",
                "firstName": "Lieven",
                "middleName": "",
                "lastName": "Clement",
                "suffix": ""
            }
        ],
        "badges": [],
        "createdAt": "2016-10-03 16:12:23",
        "currentVersionCode": 1,
        "declarations": "",
        "doi": "10.1038/protex.2016.085",
        "doiUrl": "https://doi.org/10.1038/protex.2016.085",
        "draftVersion": [],
        "editorialEvents": [],
        "editorialNote": "",
        "failedWorkflow": [],
        "files": [
            {
                "id": 2609564,
                "identity": "4c3bd0ae-100a-4945-871a-e0520d304b77",
                "added_by": "29b0f50f-991e-4cf6-96fc-2c41c75f34f2",
                "created_at": "2020-09-25 20:51:01",
                "extension": "png",
                "order_by": 1,
                "title": "Figure 1",
                "display": "",
                "copyAsset": false,
                "role": "figure",
                "size": 31643,
                "visible": true,
                "origin": "",
                "legend": "Figure  1   moFF workflow overview.    The optional match-between-runs module takes as input a list of features of interest for a given run, and then matches the corresponding features in other runs. Upon matching, all peptides (either identified directly, or indirectly by matching between runs) are processed by the Apex intensity module to extract feature intensity and associated quality measures. The results are then written to tab-delimited output files.",
                "description": "",
                "filename": "figure1.png",
                "url": "https://assets.researchsquare.com/files/nprot-5233/v1/figure_1.png"
            },
            {
                "id": 2609563,
                "identity": "bb4fd94e-321c-4088-9619-6e487b046233",
                "added_by": "29b0f50f-991e-4cf6-96fc-2c41c75f34f2",
                "created_at": "2020-09-25 20:51:01",
                "extension": "png",
                "order_by": 2,
                "title": "Figure 2",
                "display": "",
                "copyAsset": false,
                "role": "figure",
                "size": 64597,
                "visible": true,
                "origin": "",
                "legend": "Overview of the apex intensity module   Around the RT of the input feature, a time window is constructed which results in a local XIC. The peak apex is then located in this local XIC. The log_L_R metric measures the skewness of the peak around the RT of the obtained apex point. The SNR metric provides the ratio of peak height to noise, where the noise value is set as the lowest intensity value in the local XIC",
                "description": "",
                "filename": "figure2.png",
                "url": "https://assets.researchsquare.com/files/nprot-5233/v1/figure_2.png"
            },
            {
                "id": 2609566,
                "identity": "a03396d5-7b84-43dd-8153-1fa8f50df4e3",
                "added_by": "29b0f50f-991e-4cf6-96fc-2c41c75f34f2",
                "created_at": "2020-09-25 20:51:01",
                "extension": "png",
                "order_by": 3,
                "title": "Figure 3",
                "display": "",
                "copyAsset": false,
                "role": "figure",
                "size": 35872,
                "visible": true,
                "origin": "",
                "legend": "moFF GUI Overview   Setting the PeptideShaker folder and the moFF output folder where to collect your results.",
                "description": "",
                "filename": "figure3.png",
                "url": "https://assets.researchsquare.com/files/nprot-5233/v1/figure_3.png"
            },
            {
                "id": 2609570,
                "identity": "0ed29e88-8e26-4c5d-b88f-19e60a9eb650",
                "added_by": "29b0f50f-991e-4cf6-96fc-2c41c75f34f2",
                "created_at": "2020-09-25 20:51:01",
                "extension": "png",
                "order_by": 4,
                "title": "Figure 4",
                "display": "",
                "copyAsset": false,
                "role": "figure",
                "size": 95165,
                "visible": true,
                "origin": "",
                "legend": "moFF GUI Overview (2)   Load the raw  and cps files into moFF-GUI",
                "description": "",
                "filename": "figure4.png",
                "url": "https://assets.researchsquare.com/files/nprot-5233/v1/figure_4.png"
            },
            {
                "id": 2609567,
                "identity": "52e30380-b918-4386-affe-7f80dca8bdd1",
                "added_by": "29b0f50f-991e-4cf6-96fc-2c41c75f34f2",
                "created_at": "2020-09-25 20:51:01",
                "extension": "png",
                "order_by": 5,
                "title": "Figure 5",
                "display": "",
                "copyAsset": false,
                "role": "figure",
                "size": 34426,
                "visible": true,
                "origin": "",
                "legend": "moFF GUI Overview (3)   Setting the moFF parameters",
                "description": "",
                "filename": "figure5.png",
                "url": "https://assets.researchsquare.com/files/nprot-5233/v1/figure_5.png"
            },
            {
                "id": 2609569,
                "identity": "1e5de383-ca97-4c7f-993d-1012246a149e",
                "added_by": "29b0f50f-991e-4cf6-96fc-2c41c75f34f2",
                "created_at": "2020-09-25 20:51:01",
                "extension": "png",
                "order_by": 6,
                "title": "Figure 6",
                "display": "",
                "copyAsset": false,
                "role": "figure",
                "size": 634960,
                "visible": true,
                "origin": "",
                "legend": "output files of the apex module   The output of the apex module is composed by two files: the result file and log file. In the result file , you notice the intensity and log intensity extracted by moFF along with the quality measures log_L_R and SNR.\r\nThe log file contains details information to each apex intensity extracted. Here you can easily spot spot eventually errors in the apex intensity extraction from the XiC data  ",
                "description": "",
                "filename": "figure6.png",
                "url": "https://assets.researchsquare.com/files/nprot-5233/v1/figure_6.png"
            },
            {
                "id": 13465084,
                "identity": "1ff45b5a-808c-4e6d-9092-2e569bc5305b",
                "added_by": "auto",
                "created_at": "2021-09-16 20:45:35",
                "extension": "pdf",
                "order_by": 0,
                "title": "",
                "display": "",
                "copyAsset": false,
                "role": "manuscript-pdf",
                "size": 993312,
                "visible": true,
                "origin": "",
                "legend": "",
                "description": "",
                "filename": "manuscript.pdf",
                "url": "https://assets.researchsquare.com/files/nprot-5233/v1/880ef2ed-e079-420f-bdd4-9033345e2e8c.pdf"
            }
        ],
        "financialInterests": "The authors declare no competing financial interests",
        "fulltextSource": "",
        "fullText": "",
        "funders": [],
        "hasOptedInToPreprint": true,
        "hasPassedJournalQc": "",
        "hideJournal": true,
        "highlight": "",
        "institution": "",
        "isAuthorSuppliedPdf": false,
        "isDeskRejected": "",
        "isHiddenFromSearch": false,
        "isInQc": false,
        "isInWorkflow": false,
        "journal": {
            "display": true,
            "email": "protocol.exchange@nature.com",
            "identity": "protocol-exchange",
            "isNatureJournal": false,
            "hasQc": false,
            "allowDirectSubmit": true,
            "externalIdentity": "",
            "sideBox": "",
            "submissionUrl": "https://protocolexchange.researchsquare.com/submission",
            "title": "Protocol Exchange",
            "twitterHandle": ""
        },
        "keywords": "MS1 intensities, proteomics, LC-MS, label-free quantification",
        "license": {
            "name": "CC BY-NC 3.0",
            "url": "https://creativecommons.org/licenses/by-nc/3.0/"
        },
        "manuscriptAbstract": "Label free quantification approaches based on MS1 intensities extract directly from the raw file have become really popular due to low cost and the reliability of the result.\r\n\n\nQuantification softwares like MaxQuant provide accurate MS1 intensities but they need demanding computational steps that also limit their integration in automated pipeline for large number of LC-MS experiments. \r\n\n\nThis protocols shows how to use moFF \\(modest Feature Finder), a scriptable and operating system independent software to for extracting peak intensities from Thermo raw files using an apex approach and match-between-runs functionality. This protocol shows also the use of the command line and the graphic-user interface version of moFF \\(https://github.com/compomics/moff-gui )",
        "manuscriptTitle": "Using moFF  to Extract Peptide Ion Intensities from LC-MS experiments",
        "msid": "",
        "msnumber": "",
        "nonDraftVersions": [
            {
                "code": 1,
                "date": "2016-11-29 16:29:10",
                "doi": "10.1038/protex.2016.085",
                "editorialEvents": [
                    {
                        "type": "communityComments",
                        "content": 0
                    }
                ],
                "status": "published",
                "journal": {
                    "display": true,
                    "email": "info@researchsquare.com",
                    "identity": "researchsquare",
                    "isNatureJournal": false,
                    "hasQc": true,
                    "allowDirectSubmit": true,
                    "externalIdentity": "",
                    "sideBox": "",
                    "submissionUrl": "/submission",
                    "title": "Research Square",
                    "twitterHandle": "researchsquare"
                }
            }
        ],
        "origin": "",
        "ownerIdentity": "a0d1204a-516f-11e9-9e20-12b504df345a",
        "owner": [],
        "postedDate": "November 29th, 2016",
        "published": true,
        "revision": "",
        "status": "posted",
        "subjectAreas": [
            {
                "id": 3715,
                "name": "Computational biology and bioinformatics"
            },
            {
                "id": 3716,
                "name": "Biochemistry"
            }
        ],
        "tags": [],
        "versionOfRecord": [],
        "versionCreatedAt": "2016-11-29 16:29:10",
        "video": "",
        "vorDoi": "",
        "vorDoiUrl": "",
        "workflowStages": []
    }
}